./mvnw.cmd gatling:test
./mvnw.cmd gatling:recorder


        setUp(
                // Utilisation de stagesProfile au lieu de incrementUsersPerSec pour avoir des paliers bien distincts
                orangeHRMScenario.injectOpen(
                        // Premier palier : 2 utilisateurs/sec pendant 60 secondes
                        constantUsersPerSec(1).during(10)
                        // Pause complète pour voir clairement la séparation entre les paliers
                        //nothingFor(20),

                        // Deuxième palier : 5 utilisateurs/sec pendant 60 secondes
                        //constantUsersPerSec(3).during(10),
                        //nothingFor(20),

                        // Troisième palier : 10 utilisateurs/sec pendant 60 secondes
                        //constantUsersPerSec(5).during(10),
                        //nothingFor(20),

                        // Quatrième palier : 15 utilisateurs/sec pendant 60 secondes
                        //constantUsersPerSec(7).during(10),
                        //nothingFor(20),

                        // Cinquième palier : 20 utilisateurs/sec pendant 60 secondes
                        //constantUsersPerSec(10).during(10),
                        //nothingFor(20),

                        //constantUsersPerSec(13).during(10),
                        //nothingFor(20),

                        //constantUsersPerSec(16).during(10),
                        //nothingFor(20)
                ).protocols(httpProtocol)
        );


        //        setUp(
        //                orangeHRMScenario.injectOpen(
        //                        // Augmentation progressive par paliers (stairs pattern)
        //                        // Débuter avec 5 utilisateurs par seconde
        //                        // Augmenter de 5 utilisateurs par seconde à chaque palier
        //                        // 5 paliers au total (5, 10, 15, 20, 25 utilisateurs/s)
        //                        // Chaque palier dure 30 secondes
        //                        // Séparés par des rampes de 20 secondes
        //                        incrementUsersPerSec(1.0)
        //                                .times(2)
        //                                .eachLevelLasting(2)
        //                                .separatedByRampsLasting(180)
        //                                .startingFrom(1.0) // Commencer à 5 utilisateurs par seconde
        //                ).protocols(httpProtocol)
        //        );



            private final ChainBuilder searchEmployeeByNameChain =
                    feed(employeeNamesFeeder)
                            .exec(SearchEmployeeChainBuilders.searchEmployeeByName())
                            .pause(1)
                            .feed(contactDetailsFeeder)
                            .exec(SearchEmployeeChainBuilders.viewEmployeeContact());

            private final ChainBuilder addEmployeeChain =
                    feed(newEmployeesFeeder)
                            .exec(AddEmployeeChainBuilders.navigateToAddEmployee())
                            .pause(1)
                            .exec(AddEmployeeChainBuilders.addNewEmployee())
                            .pause(1)
                            .exec(AddEmployeeChainBuilders.fillEmployeeDetails());

            private final ChainBuilder deleteEmployeeChain =
                    feed(employeeIdsFeeder)
                            .exec(DeleteEmployeeChainBuilders.searchEmployeeById())
                            .pause(1)
                            .exec(DeleteEmployeeChainBuilders.deleteEmployee());

            // Scénario unique avec randomSwitch pour la répartition de charge 75/20/5
            private final ScenarioBuilder orangeHRMScenario = scenario("OrangeHRM Mixed Load Test")
                    .pace(1)
                    .exec(CommonChainBuilders.login())
                    .pause(1)
                    .exec(
                            randomSwitch().on(
                                    percent(75.0).then (exec(searchEmployeeByNameChain)),
                                    percent(20.0).then (exec(addEmployeeChain)),
                                    percent(5.0).then (exec(deleteEmployeeChain))
                            )
                    )
                    .pause(1)
                    .exec(CommonChainBuilders.logout());

            // Configuration de la simulation avec augmentation progressive de type "stairs"
            {

                setUp(
                        // Utilisation de stagesProfile au lieu de incrementUsersPerSec pour avoir des paliers bien distincts
                        orangeHRMScenario.injectOpen(
                                rampUsers(300).during(300)
                        ).protocols(httpProtocol)
                );
            }
        }